How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Diff spots the differences between two files. So, it's easy to see what change
makes a functionally program, fails.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Having access to the entire history makes easier to go back to a functionally
version of the program. That way you don't loose time modifying the file back.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like
Google Docs does?

Pros: versions are functional, compile, or they should. It's easier to document
the changes been made.

Cons: changes could be lost if something happends or you forget to save changes.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Because the type of documents which are treated separately aren't related with
another files.

How can you use the commands git log and git diff to view the history of files?

With git log you can see the history of changes made in the entire repository.
Ordered by date and showing the author and the ID that identifies the change.
With git diff you can see the differences between two changes.

How might using version control make you more confident to make changes that
could break something?

A version control gives you the ability to go back to a previous version of the
code at any time and revert the possible errors. Also it's possible to see in an
easy way the changes made and which one provokes the bug.

Now that you have your workspace set up, what do you want to try using Git for?

I want to start a Django project. 
